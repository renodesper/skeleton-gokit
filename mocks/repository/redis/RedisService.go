// Code generated by mockery 2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	repository "gitlab.com/renodesper/gokit-microservices/repository"
)

// RedisService is an autogenerated mock type for the RedisService type
type RedisService struct {
	mock.Mock
}

// GetUserByID provides a mock function with given fields: ctx, userID
func (_m *RedisService) GetUserByID(ctx context.Context, userID string) (repository.User, error) {
	ret := _m.Called(ctx, userID)

	var r0 repository.User
	if rf, ok := ret.Get(0).(func(context.Context, string) repository.User); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Get(0).(repository.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetUser provides a mock function with given fields: ctx, user
func (_m *RedisService) SetUser(ctx context.Context, user repository.User) error {
	ret := _m.Called(ctx, user)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, repository.User) error); ok {
		r0 = rf(ctx, user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
